---
stages:
  - lint
  - build
  - sanitize
  - coverage

# clang-format:
#   stage: lint
#   tags:
#     - mc-linux-slow
#   variables:
#     GIT_SUBMODULE_STRATEGY: recursive
#   script:
#     - cd $CI_PROJECT_DIR
#     - make format-check
#   dependencies: [ ]
#   needs: []

win:msvc:cpp14:
  stage: build
  tags:
    - mc-windows
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    ErrorActionPreference: stop
  script: |
    "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat amd64"
    $ErrorActionPreference = "Stop"
    Set-Location $env:CI_PROJECT_DIR
    cmake -S . -B cmake-build-release -G "Ninja Multi-Config" -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=14 -DMC_BUILD_WERROR=ON
    cmake --build cmake-build-release --config Release --parallel 3
    ctest -C Release
  dependencies: []
  needs: []

win:msvc:cpp17:
  stage: build
  tags:
    - mc-windows
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    ErrorActionPreference: stop
  script: |
    "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat amd64"
    $ErrorActionPreference = "Stop"
    Set-Location $env:CI_PROJECT_DIR
    cmake -S . -B cmake-build-release -G "Ninja Multi-Config" -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=17 -DMC_BUILD_WERROR=ON
    cmake --build cmake-build-release --config Release --parallel 3
    ctest -C Release
  dependencies: []
  needs: []

mac:xcode:cpp14:
  stage: build
  tags:
    - mc-macos
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    MACOSX_DEPLOYMENT_TARGET: "10.11"
  script:
    - cd $CI_PROJECT_DIR
    - cmake -S. -GNinja -Bcmake-build-release -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=14 -DMC_BUILD_WERROR=ON
    - cmake --build cmake-build-release
    - cd cmake-build-release
    - ctest
  dependencies: []
  needs: []

mac:xcode:cpp17:
  stage: build
  tags:
    - mc-macos
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    MACOSX_DEPLOYMENT_TARGET: "10.14"
  script:
    - cd $CI_PROJECT_DIR
    - cmake -S. -GNinja -Bcmake-build-release -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=17 -DMC_BUILD_WERROR=ON
    - cmake --build cmake-build-release
    - cd cmake-build-release
    - ctest
  dependencies: []
  needs: []

linux:clang:cpp14:
  stage: build
  tags:
    - mc-linux
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    CC: clang-12
    CXX: clang++-12
  script:
    - cd $CI_PROJECT_DIR
    - cmake -S. -GNinja -Bcmake-build-release -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=14 -DMC_BUILD_WERROR=ON
    - cmake --build cmake-build-release
    - cd cmake-build-release
    - ctest
  dependencies: []
  needs: []

linux:clang:cpp17:
  stage: build
  tags:
    - mc-linux
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    CC: clang-12
    CXX: clang++-12
  script:
    - cd $CI_PROJECT_DIR
    - cmake -S. -GNinja -Bcmake-build-release -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=17 -DMC_BUILD_WERROR=ON
    - cmake --build cmake-build-release
    - cd cmake-build-release
    - ctest
  dependencies: []
  needs: []

linux:clang-tidy:
  stage: build
  tags:
    - mc-linux
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - cd $CI_PROJECT_DIR
    - cmake -S. -GNinja -Bcmake-build-tidy -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=14
    - BUILD_DIR=cmake-build-tidy make tidy-check
    - rm -rf cmake-build-tidy
    - cmake -S. -GNinja -Bcmake-build-tidy -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=17
    - BUILD_DIR=cmake-build-tidy make tidy-check
  dependencies: []
  needs: []

linux:gcc:asan:
  stage: sanitize
  tags:
    - mc-linux
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    CMAKE_BUILD_PARALLEL_LEVEL: 2
  script:
    - cd $CI_PROJECT_DIR
    - cmake -S. -GNinja -Bcmake-build-asan -DCMAKE_BUILD_TYPE=Release -DMC_BUILD_ASAN=ON
    - cmake --build cmake-build-asan
    - cd cmake-build-asan
    - ctest
  dependencies: []
  needs: []

# linux:gcc:tsan:
#   stage: sanitize
#   tags:
#     - mc-linux
#   variables:
#     GIT_SUBMODULE_STRATEGY: recursive
#     CMAKE_BUILD_PARALLEL_LEVEL: 2
#   script:
#     - cd $CI_PROJECT_DIR
#     - cmake -S. -GNinja -Bcmake-build-tsan -DCMAKE_BUILD_TYPE=Release -DMC_BUILD_TSAN=ON
#     - cmake --build cmake-build-tsan
#     - cd cmake-build-tsan
#     - ctest
#   dependencies: [ ]
#   needs: []

linux:gcc:coverage:
  stage: coverage
  only:
    - main
  tags:
    - mc-linux
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    CMAKE_BUILD_PARALLEL_LEVEL: 2
  dependencies: []
  needs: []
  script:
    - make coverage-xml
  coverage: /^\s*lines:\s*\d+.\d+\%/
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    expire_in: 2 days
    reports:
      cobertura: cmake-build-coverage/coverage.xml
